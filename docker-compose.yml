version: "3.8"
services:
  django:
    build:
      - ./sentinex
    container_name:
      - django_sentinex_service
    volumes:
      - ./sentinex:/app
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=sentinex.settings
    env_file:
      - ./.env
    networks:
      - django_network
    command:
      - sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    depends_on:
      - pgdb
    restart: always
  pgdb:
    image: postgres:15
    container_name:
      - pgdb
    environment:
      - POSTGRES_DB: ${POSTGRES_DB}
      - POSTGRES_USER: ${POSTGRES_USER}
      - POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/dat
    networks:
      - django_network
    restart:
      - always
  celery:
    build:
      - ./sentinex
    command:
      - celery -A sentinex worker -l INFO
    volumes:
      - ./sentinex:/app
    depends_on:
      - django

volumes:
  postgres_data:

networks:
  django_network:
